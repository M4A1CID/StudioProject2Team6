<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="Vector2_8inl" kind="file">
    <compoundname>Vector2.inl</compoundname>
    <includedby refid="Vector2_8hpp" local="no">SFML/include/SFML/System/Vector2.hpp</includedby>
    <invincdepgraph>
      <node id="4103">
        <label>MyGraphics/Source/SceneSP.cpp</label>
        <link refid="SceneSP_8cpp"/>
      </node>
      <node id="4099">
        <label>SFML/include/SFML/Audio.hpp</label>
        <link refid="Audio_8hpp"/>
        <childnode refid="4100" relation="include">
        </childnode>
      </node>
      <node id="4101">
        <label>MyGraphics/Source/Application.cpp</label>
        <link refid="Application_8cpp"/>
      </node>
      <node id="4097">
        <label>SFML/include/SFML/System/Vector2.hpp</label>
        <link refid="Vector2_8hpp"/>
        <childnode refid="4098" relation="include">
        </childnode>
      </node>
      <node id="4100">
        <label>MyGraphics/Source/SceneSP.h</label>
        <link refid="SceneSP_8h"/>
        <childnode refid="4101" relation="include">
        </childnode>
        <childnode refid="4102" relation="include">
        </childnode>
        <childnode refid="4103" relation="include">
        </childnode>
      </node>
      <node id="4096">
        <label>SFML/include/SFML/System/Vector2.inl</label>
        <link refid="Vector2.inl"/>
        <childnode refid="4097" relation="include">
        </childnode>
      </node>
      <node id="4098">
        <label>SFML/include/SFML/System.hpp</label>
        <link refid="System_8hpp"/>
        <childnode refid="4099" relation="include">
        </childnode>
      </node>
      <node id="4102">
        <label>MyGraphics/Source/Camera3.cpp</label>
        <link refid="Camera3_8cpp"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="Vector2_8inl_1af6be5729d510689ad3bda16e2ee1052e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>Vector2&lt; T &gt;</type>
        <definition>Vector2&lt;T&gt; operator-</definition>
        <argsstring>(const Vector2&lt; T &gt; &amp;right)</argsstring>
        <name>operator-</name>
        <param>
          <type>const Vector2&lt; T &gt; &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/System/Vector2.inl" line="58" column="1" bodyfile="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/System/Vector2.inl" bodystart="58" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="Vector2_8inl_1a52734531787801fca563b63877cf8855" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>Vector2&lt; T &gt; &amp;</type>
        <definition>Vector2&lt;T&gt;&amp; operator+=</definition>
        <argsstring>(Vector2&lt; T &gt; &amp;left, const Vector2&lt; T &gt; &amp;right)</argsstring>
        <name>operator+=</name>
        <param>
          <type>Vector2&lt; T &gt; &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const Vector2&lt; T &gt; &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/System/Vector2.inl" line="66" column="1" bodyfile="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/System/Vector2.inl" bodystart="66" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="Vector2_8inl_1a6dc66f95d609a2280bc5d0e8dc1871ec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>Vector2&lt; T &gt; &amp;</type>
        <definition>Vector2&lt;T&gt;&amp; operator-=</definition>
        <argsstring>(Vector2&lt; T &gt; &amp;left, const Vector2&lt; T &gt; &amp;right)</argsstring>
        <name>operator-=</name>
        <param>
          <type>Vector2&lt; T &gt; &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const Vector2&lt; T &gt; &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/System/Vector2.inl" line="77" column="1" bodyfile="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/System/Vector2.inl" bodystart="77" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="Vector2_8inl_1a629b6b51cf4ef3d9bef1b471096535c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>Vector2&lt; T &gt;</type>
        <definition>Vector2&lt;T&gt; operator+</definition>
        <argsstring>(const Vector2&lt; T &gt; &amp;left, const Vector2&lt; T &gt; &amp;right)</argsstring>
        <name>operator+</name>
        <param>
          <type>const Vector2&lt; T &gt; &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const Vector2&lt; T &gt; &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/System/Vector2.inl" line="88" column="1" bodyfile="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/System/Vector2.inl" bodystart="88" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="Vector2_8inl_1ad844643fc6fb0eea05a382b318ae5259" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>Vector2&lt; T &gt;</type>
        <definition>Vector2&lt;T&gt; operator-</definition>
        <argsstring>(const Vector2&lt; T &gt; &amp;left, const Vector2&lt; T &gt; &amp;right)</argsstring>
        <name>operator-</name>
        <param>
          <type>const Vector2&lt; T &gt; &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const Vector2&lt; T &gt; &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/System/Vector2.inl" line="96" column="1" bodyfile="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/System/Vector2.inl" bodystart="96" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="Vector2_8inl_1a4bcfa0548660237aec2f1fdfd000a30f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>Vector2&lt; T &gt;</type>
        <definition>Vector2&lt;T&gt; operator*</definition>
        <argsstring>(const Vector2&lt; T &gt; &amp;left, T right)</argsstring>
        <name>operator*</name>
        <param>
          <type>const Vector2&lt; T &gt; &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>T</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/System/Vector2.inl" line="104" column="1" bodyfile="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/System/Vector2.inl" bodystart="104" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="Vector2_8inl_1afe4ec033f7e7061b5693a7dbcdecf96e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>Vector2&lt; T &gt;</type>
        <definition>Vector2&lt;T&gt; operator*</definition>
        <argsstring>(T left, const Vector2&lt; T &gt; &amp;right)</argsstring>
        <name>operator*</name>
        <param>
          <type>T</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const Vector2&lt; T &gt; &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/System/Vector2.inl" line="112" column="1" bodyfile="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/System/Vector2.inl" bodystart="112" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="Vector2_8inl_1af8c6cb01ae7604914f9ea350793712bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>Vector2&lt; T &gt; &amp;</type>
        <definition>Vector2&lt;T&gt;&amp; operator*=</definition>
        <argsstring>(Vector2&lt; T &gt; &amp;left, T right)</argsstring>
        <name>operator*=</name>
        <param>
          <type>Vector2&lt; T &gt; &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>T</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/System/Vector2.inl" line="120" column="1" bodyfile="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/System/Vector2.inl" bodystart="120" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="Vector2_8inl_1a1a55a08f8d786e49995d2b162d0ef922" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>Vector2&lt; T &gt;</type>
        <definition>Vector2&lt;T&gt; operator/</definition>
        <argsstring>(const Vector2&lt; T &gt; &amp;left, T right)</argsstring>
        <name>operator/</name>
        <param>
          <type>const Vector2&lt; T &gt; &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>T</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/System/Vector2.inl" line="131" column="1" bodyfile="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/System/Vector2.inl" bodystart="131" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="Vector2_8inl_1ad2184b7a2f3e06a149072232f916cd16" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>Vector2&lt; T &gt; &amp;</type>
        <definition>Vector2&lt;T&gt;&amp; operator/=</definition>
        <argsstring>(Vector2&lt; T &gt; &amp;left, T right)</argsstring>
        <name>operator/=</name>
        <param>
          <type>Vector2&lt; T &gt; &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>T</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/System/Vector2.inl" line="139" column="1" bodyfile="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/System/Vector2.inl" bodystart="139" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="Vector2_8inl_1a9a7b2d36c3850828fdb651facfd25136" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const Vector2&lt; T &gt; &amp;left, const Vector2&lt; T &gt; &amp;right)</argsstring>
        <name>operator==</name>
        <param>
          <type>const Vector2&lt; T &gt; &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const Vector2&lt; T &gt; &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/System/Vector2.inl" line="150" column="1" bodyfile="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/System/Vector2.inl" bodystart="150" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="Vector2_8inl_1a01673da35ef9c52d0e54b8263549a956" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const Vector2&lt; T &gt; &amp;left, const Vector2&lt; T &gt; &amp;right)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const Vector2&lt; T &gt; &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const Vector2&lt; T &gt; &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/System/Vector2.inl" line="158" column="1" bodyfile="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/System/Vector2.inl" bodystart="158" bodyend="161"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SFML<sp/>-<sp/>Simple<sp/>and<sp/>Fast<sp/>Multimedia<sp/>Library</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2007-2014<sp/>Laurent<sp/>Gomila<sp/>(laurent.gom@gmail.com)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>software<sp/>is<sp/>provided<sp/>&apos;as-is&apos;,<sp/>without<sp/>any<sp/>express<sp/>or<sp/>implied<sp/>warranty.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>no<sp/>event<sp/>will<sp/>the<sp/>authors<sp/>be<sp/>held<sp/>liable<sp/>for<sp/>any<sp/>damages<sp/>arising<sp/>from<sp/>the<sp/>use<sp/>of<sp/>this<sp/>software.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Permission<sp/>is<sp/>granted<sp/>to<sp/>anyone<sp/>to<sp/>use<sp/>this<sp/>software<sp/>for<sp/>any<sp/>purpose,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>including<sp/>commercial<sp/>applications,<sp/>and<sp/>to<sp/>alter<sp/>it<sp/>and<sp/>redistribute<sp/>it<sp/>freely,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>restrictions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>1.<sp/>The<sp/>origin<sp/>of<sp/>this<sp/>software<sp/>must<sp/>not<sp/>be<sp/>misrepresented;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>you<sp/>must<sp/>not<sp/>claim<sp/>that<sp/>you<sp/>wrote<sp/>the<sp/>original<sp/>software.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>If<sp/>you<sp/>use<sp/>this<sp/>software<sp/>in<sp/>a<sp/>product,<sp/>an<sp/>acknowledgment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>in<sp/>the<sp/>product<sp/>documentation<sp/>would<sp/>be<sp/>appreciated<sp/>but<sp/>is<sp/>not<sp/>required.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>2.<sp/>Altered<sp/>source<sp/>versions<sp/>must<sp/>be<sp/>plainly<sp/>marked<sp/>as<sp/>such,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>and<sp/>must<sp/>not<sp/>be<sp/>misrepresented<sp/>as<sp/>being<sp/>the<sp/>original<sp/>software.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>3.<sp/>This<sp/>notice<sp/>may<sp/>not<sp/>be<sp/>removed<sp/>or<sp/>altered<sp/>from<sp/>any<sp/>source<sp/>distribution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="24"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="28" refid="classsf_1_1Vector2_1a39e5056d930011fba562ad69679efcb8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classsf_1_1Vector2" kindref="compound">Vector2&lt;T&gt;::Vector2</ref>()<sp/>:</highlight></codeline>
<codeline lineno="29"><highlight class="normal">x(0),</highlight></codeline>
<codeline lineno="30"><highlight class="normal">y(0)</highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="38" refid="classsf_1_1Vector2_1a18a61144d6839c5658b62ebb49c9eb68" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classsf_1_1Vector2_1a58c32383b5291380db4b43a289f75988" kindref="member">Vector2&lt;T&gt;::Vector2</ref>(T<sp/>X,<sp/>T<sp/>Y)<sp/>:</highlight></codeline>
<codeline lineno="39"><highlight class="normal">x(X),</highlight></codeline>
<codeline lineno="40"><highlight class="normal">y(Y)</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="49" refid="classsf_1_1Vector2_1a3da455e0ae3f8ff6d2fe36d10b332d10" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classsf_1_1Vector2_1a58c32383b5291380db4b43a289f75988" kindref="member">Vector2&lt;T&gt;::Vector2</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classsf_1_1Vector2" kindref="compound">Vector2&lt;U&gt;</ref>&amp;<sp/>vector)<sp/>:</highlight></codeline>
<codeline lineno="50"><highlight class="normal">x(static_cast&lt;T&gt;(vector.x)),</highlight></codeline>
<codeline lineno="51"><highlight class="normal">y(static_cast&lt;T&gt;(vector.y))</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="58" refid="Vector2_8inl_1af6be5729d510689ad3bda16e2ee1052e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Vector2&lt;T&gt;<sp/><ref refid="Vector2_8inl_1af6be5729d510689ad3bda16e2ee1052e" kindref="member">operator -</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector2&lt;T&gt;&amp;<sp/>right)</highlight></codeline>
<codeline lineno="59"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Vector2&lt;T&gt;(-right.x,<sp/>-right.y);</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="66" refid="Vector2_8inl_1a52734531787801fca563b63877cf8855" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Vector2&lt;T&gt;&amp;<sp/><ref refid="Vector2_8inl_1a52734531787801fca563b63877cf8855" kindref="member">operator +=</ref>(Vector2&lt;T&gt;&amp;<sp/>left,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector2&lt;T&gt;&amp;<sp/>right)</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>left.x<sp/>+=<sp/>right.x;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>left.y<sp/>+=<sp/>right.y;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>left;</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="77" refid="Vector2_8inl_1a6dc66f95d609a2280bc5d0e8dc1871ec" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Vector2&lt;T&gt;&amp;<sp/><ref refid="Vector2_8inl_1a6dc66f95d609a2280bc5d0e8dc1871ec" kindref="member">operator -=</ref>(Vector2&lt;T&gt;&amp;<sp/>left,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector2&lt;T&gt;&amp;<sp/>right)</highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>left.x<sp/>-=<sp/>right.x;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>left.y<sp/>-=<sp/>right.y;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>left;</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="88" refid="Vector2_8inl_1a629b6b51cf4ef3d9bef1b471096535c1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Vector2&lt;T&gt;<sp/><ref refid="Vector2_8inl_1a629b6b51cf4ef3d9bef1b471096535c1" kindref="member">operator +</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector2&lt;T&gt;&amp;<sp/>left,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector2&lt;T&gt;&amp;<sp/>right)</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Vector2&lt;T&gt;(left.x<sp/>+<sp/>right.x,<sp/>left.y<sp/>+<sp/>right.y);</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="96" refid="Vector2_8inl_1ad844643fc6fb0eea05a382b318ae5259" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Vector2&lt;T&gt;<sp/><ref refid="Vector2_8inl_1af6be5729d510689ad3bda16e2ee1052e" kindref="member">operator -</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector2&lt;T&gt;&amp;<sp/>left,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector2&lt;T&gt;&amp;<sp/>right)</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Vector2&lt;T&gt;(left.x<sp/>-<sp/>right.x,<sp/>left.y<sp/>-<sp/>right.y);</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="104" refid="Vector2_8inl_1a4bcfa0548660237aec2f1fdfd000a30f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Vector2&lt;T&gt;<sp/><ref refid="Vector2_8inl_1a4bcfa0548660237aec2f1fdfd000a30f" kindref="member">operator *</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector2&lt;T&gt;&amp;<sp/>left,<sp/>T<sp/>right)</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Vector2&lt;T&gt;(left.x<sp/>*<sp/>right,<sp/>left.y<sp/>*<sp/>right);</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="112" refid="Vector2_8inl_1afe4ec033f7e7061b5693a7dbcdecf96e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Vector2&lt;T&gt;<sp/><ref refid="Vector2_8inl_1a4bcfa0548660237aec2f1fdfd000a30f" kindref="member">operator *</ref>(T<sp/>left,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector2&lt;T&gt;&amp;<sp/>right)</highlight></codeline>
<codeline lineno="113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Vector2&lt;T&gt;(right.x<sp/>*<sp/>left,<sp/>right.y<sp/>*<sp/>left);</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="120" refid="Vector2_8inl_1af8c6cb01ae7604914f9ea350793712bb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Vector2&lt;T&gt;&amp;<sp/><ref refid="Vector2_8inl_1af8c6cb01ae7604914f9ea350793712bb" kindref="member">operator *=</ref>(Vector2&lt;T&gt;&amp;<sp/>left,<sp/>T<sp/>right)</highlight></codeline>
<codeline lineno="121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>left.x<sp/>*=<sp/>right;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>left.y<sp/>*=<sp/>right;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>left;</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="131" refid="Vector2_8inl_1a1a55a08f8d786e49995d2b162d0ef922" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Vector2&lt;T&gt;<sp/><ref refid="Vector2_8inl_1a1a55a08f8d786e49995d2b162d0ef922" kindref="member">operator /</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector2&lt;T&gt;&amp;<sp/>left,<sp/>T<sp/>right)</highlight></codeline>
<codeline lineno="132"><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Vector2&lt;T&gt;(left.x<sp/>/<sp/>right,<sp/>left.y<sp/>/<sp/>right);</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="139" refid="Vector2_8inl_1ad2184b7a2f3e06a149072232f916cd16" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Vector2&lt;T&gt;&amp;<sp/><ref refid="Vector2_8inl_1ad2184b7a2f3e06a149072232f916cd16" kindref="member">operator /=</ref>(Vector2&lt;T&gt;&amp;<sp/>left,<sp/>T<sp/>right)</highlight></codeline>
<codeline lineno="140"><highlight class="normal">{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>left.x<sp/>/=<sp/>right;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>left.y<sp/>/=<sp/>right;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>left;</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="150" refid="Vector2_8inl_1a9a7b2d36c3850828fdb651facfd25136" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="Vector2_8inl_1a9a7b2d36c3850828fdb651facfd25136" kindref="member">operator ==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector2&lt;T&gt;&amp;<sp/>left,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector2&lt;T&gt;&amp;<sp/>right)</highlight></codeline>
<codeline lineno="151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(left.x<sp/>==<sp/>right.x)<sp/>&amp;&amp;<sp/>(left.y<sp/>==<sp/>right.y);</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="158" refid="Vector2_8inl_1a01673da35ef9c52d0e54b8263549a956" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="Vector2_8inl_1a01673da35ef9c52d0e54b8263549a956" kindref="member">operator !=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector2&lt;T&gt;&amp;<sp/>left,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector2&lt;T&gt;&amp;<sp/>right)</highlight></codeline>
<codeline lineno="159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(left.x<sp/>!=<sp/>right.x)<sp/>||<sp/>(left.y<sp/>!=<sp/>right.y);</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/System/Vector2.inl"/>
  </compounddef>
</doxygen>
