<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="classsf_1_1SoundBuffer" kind="class" prot="public">
    <compoundname>sf::SoundBuffer</compoundname>
    <includes refid="SoundBuffer_8hpp" local="no">SoundBuffer.hpp</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classsf_1_1SoundBuffer_1a0c4edd90a4c83b07369e84f14b385196" prot="private" static="no">
        <type>std::set&lt; <ref refid="classsf_1_1Sound" kindref="compound">Sound</ref> * &gt;</type>
        <definition>typedef std::set&lt;Sound*&gt; sf::SoundBuffer::SoundList</definition>
        <argsstring></argsstring>
        <name>SoundList</name>
        <briefdescription>
<para>Set of unique sound instances. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/Audio/SoundBuffer.hpp" line="277" column="1" bodyfile="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/Audio/SoundBuffer.hpp" bodystart="277" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classsf_1_1SoundBuffer_1a50914f77c7cf4fb97616c898c5291f4b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Sound</definition>
        <argsstring></argsstring>
        <name>Sound</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/Audio/SoundBuffer.hpp" line="235" column="1" bodyfile="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/Audio/SoundBuffer.hpp" bodystart="235" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsf_1_1SoundBuffer_1a90bd207655b9b1a312f6ebb7ae783da2" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int sf::SoundBuffer::m_buffer</definition>
        <argsstring></argsstring>
        <name>m_buffer</name>
        <briefdescription>
<para>OpenAL buffer identifier. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/Audio/SoundBuffer.hpp" line="282" column="1" bodyfile="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/Audio/SoundBuffer.hpp" bodystart="282" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsf_1_1SoundBuffer_1a6c954068fe46d5567f2c94eb3c79c5f3" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespacesf_1a3c8e10435e2a310a7741755e66b5c94e" kindref="member">Int16</ref> &gt;</type>
        <definition>std::vector&lt;Int16&gt; sf::SoundBuffer::m_samples</definition>
        <argsstring></argsstring>
        <name>m_samples</name>
        <briefdescription>
<para>Samples buffer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/Audio/SoundBuffer.hpp" line="283" column="1" bodyfile="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/Audio/SoundBuffer.hpp" bodystart="283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsf_1_1SoundBuffer_1ad7a031590faff910c94cc442864eabd3" prot="private" static="no" mutable="no">
        <type><ref refid="classsf_1_1Time" kindref="compound">Time</ref></type>
        <definition>Time sf::SoundBuffer::m_duration</definition>
        <argsstring></argsstring>
        <name>m_duration</name>
        <briefdescription>
<para><ref refid="classsf_1_1Sound" kindref="compound">Sound</ref> duration. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/Audio/SoundBuffer.hpp" line="284" column="1" bodyfile="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/Audio/SoundBuffer.hpp" bodystart="284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsf_1_1SoundBuffer_1aa6fc10c994c0aaca70567e8fd1ddabc3" prot="private" static="no" mutable="yes">
        <type><ref refid="classsf_1_1SoundBuffer_1a0c4edd90a4c83b07369e84f14b385196" kindref="member">SoundList</ref></type>
        <definition>SoundList sf::SoundBuffer::m_sounds</definition>
        <argsstring></argsstring>
        <name>m_sounds</name>
        <briefdescription>
<para>List of sounds that are using this buffer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/Audio/SoundBuffer.hpp" line="285" column="1" bodyfile="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/Audio/SoundBuffer.hpp" bodystart="285" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsf_1_1SoundBuffer_1a0cabfbfe19b831bf7d5c9592d92ef233" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>sf::SoundBuffer::SoundBuffer</definition>
        <argsstring>()</argsstring>
        <name>SoundBuffer</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/Audio/SoundBuffer.hpp" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsf_1_1SoundBuffer_1aaf000fc741ff27015907e8588263f4a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>sf::SoundBuffer::SoundBuffer</definition>
        <argsstring>(const SoundBuffer &amp;copy)</argsstring>
        <name>SoundBuffer</name>
        <param>
          <type>const <ref refid="classsf_1_1SoundBuffer" kindref="compound">SoundBuffer</ref> &amp;</type>
          <declname>copy</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>copy</parametername>
</parameternamelist>
<parameterdescription>
<para>Instance to copy </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/Audio/SoundBuffer.hpp" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsf_1_1SoundBuffer_1aea240161724ffba74a0d6a9e277d3cd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>sf::SoundBuffer::~SoundBuffer</definition>
        <argsstring>()</argsstring>
        <name>~SoundBuffer</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/Audio/SoundBuffer.hpp" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsf_1_1SoundBuffer_1a2be6a8025c97eb622a7dff6cf2594394" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sf::SoundBuffer::loadFromFile</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>loadFromFile</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Load the sound buffer from a file. </para>        </briefdescription>
        <detaileddescription>
<para>Here is a complete list of all the supported audio formats: ogg, wav, flac, aiff, au, raw, paf, svx, nist, voc, ircam, w64, mat4, mat5 pvf, htk, sds, avr, sd2, caf, wve, mpc2k, rf64.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Path of the sound file to load</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if loading succeeded, false if it failed</para></simplesect>
<simplesect kind="see"><para><ref refid="classsf_1_1SoundBuffer_1af8cfa5599739a7edae69c5cba273d33f" kindref="member">loadFromMemory</ref>, <ref refid="classsf_1_1SoundBuffer_1ad292156b1e01f6dabd4c0c277d5e079e" kindref="member">loadFromStream</ref>, <ref refid="classsf_1_1SoundBuffer_1a63da986e144b578135edd48e51c565e8" kindref="member">loadFromSamples</ref>, <ref refid="classsf_1_1SoundBuffer_1ab2083dc1a934c64959d9e3f162328a76" kindref="member">saveToFile</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/Audio/SoundBuffer.hpp" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsf_1_1SoundBuffer_1af8cfa5599739a7edae69c5cba273d33f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sf::SoundBuffer::loadFromMemory</definition>
        <argsstring>(const void *data, std::size_t sizeInBytes)</argsstring>
        <name>loadFromMemory</name>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>sizeInBytes</declname>
        </param>
        <briefdescription>
<para>Load the sound buffer from a file in memory. </para>        </briefdescription>
        <detaileddescription>
<para>Here is a complete list of all the supported audio formats: ogg, wav, flac, aiff, au, raw, paf, svx, nist, voc, ircam, w64, mat4, mat5 pvf, htk, sds, avr, sd2, caf, wve, mpc2k, rf64.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the file data in memory </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sizeInBytes</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the data to load, in bytes</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if loading succeeded, false if it failed</para></simplesect>
<simplesect kind="see"><para><ref refid="classsf_1_1SoundBuffer_1a2be6a8025c97eb622a7dff6cf2594394" kindref="member">loadFromFile</ref>, <ref refid="classsf_1_1SoundBuffer_1ad292156b1e01f6dabd4c0c277d5e079e" kindref="member">loadFromStream</ref>, <ref refid="classsf_1_1SoundBuffer_1a63da986e144b578135edd48e51c565e8" kindref="member">loadFromSamples</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/Audio/SoundBuffer.hpp" line="107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsf_1_1SoundBuffer_1ad292156b1e01f6dabd4c0c277d5e079e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sf::SoundBuffer::loadFromStream</definition>
        <argsstring>(InputStream &amp;stream)</argsstring>
        <name>loadFromStream</name>
        <param>
          <type><ref refid="classsf_1_1InputStream" kindref="compound">InputStream</ref> &amp;</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
<para>Load the sound buffer from a custom stream. </para>        </briefdescription>
        <detaileddescription>
<para>Here is a complete list of all the supported audio formats: ogg, wav, flac, aiff, au, raw, paf, svx, nist, voc, ircam, w64, mat4, mat5 pvf, htk, sds, avr, sd2, caf, wve, mpc2k, rf64.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stream</parametername>
</parameternamelist>
<parameterdescription>
<para>Source stream to read from</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if loading succeeded, false if it failed</para></simplesect>
<simplesect kind="see"><para><ref refid="classsf_1_1SoundBuffer_1a2be6a8025c97eb622a7dff6cf2594394" kindref="member">loadFromFile</ref>, <ref refid="classsf_1_1SoundBuffer_1af8cfa5599739a7edae69c5cba273d33f" kindref="member">loadFromMemory</ref>, <ref refid="classsf_1_1SoundBuffer_1a63da986e144b578135edd48e51c565e8" kindref="member">loadFromSamples</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/Audio/SoundBuffer.hpp" line="123" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsf_1_1SoundBuffer_1a63da986e144b578135edd48e51c565e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sf::SoundBuffer::loadFromSamples</definition>
        <argsstring>(const Int16 *samples, std::size_t sampleCount, unsigned int channelCount, unsigned int sampleRate)</argsstring>
        <name>loadFromSamples</name>
        <param>
          <type>const <ref refid="namespacesf_1a3c8e10435e2a310a7741755e66b5c94e" kindref="member">Int16</ref> *</type>
          <declname>samples</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>sampleCount</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>channelCount</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>sampleRate</declname>
        </param>
        <briefdescription>
<para>Load the sound buffer from an array of audio samples. </para>        </briefdescription>
        <detaileddescription>
<para>The assumed format of the audio samples is 16 bits signed integer (<ref refid="namespacesf_1a3c8e10435e2a310a7741755e66b5c94e" kindref="member">sf::Int16</ref>).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>samples</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the array of samples in memory </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sampleCount</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of samples in the array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channelCount</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of channels (1 = mono, 2 = stereo, ...) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sampleRate</parametername>
</parameternamelist>
<parameterdescription>
<para>Sample rate (number of samples to play per second)</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if loading succeeded, false if it failed</para></simplesect>
<simplesect kind="see"><para><ref refid="classsf_1_1SoundBuffer_1a2be6a8025c97eb622a7dff6cf2594394" kindref="member">loadFromFile</ref>, <ref refid="classsf_1_1SoundBuffer_1af8cfa5599739a7edae69c5cba273d33f" kindref="member">loadFromMemory</ref>, <ref refid="classsf_1_1SoundBuffer_1ab2083dc1a934c64959d9e3f162328a76" kindref="member">saveToFile</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/Audio/SoundBuffer.hpp" line="141" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsf_1_1SoundBuffer_1ab2083dc1a934c64959d9e3f162328a76" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sf::SoundBuffer::saveToFile</definition>
        <argsstring>(const std::string &amp;filename) const </argsstring>
        <name>saveToFile</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Save the sound buffer to an audio file. </para>        </briefdescription>
        <detaileddescription>
<para>Here is a complete list of all the supported audio formats: ogg, wav, flac, aiff, au, raw, paf, svx, nist, voc, ircam, w64, mat4, mat5 pvf, htk, sds, avr, sd2, caf, wve, mpc2k, rf64.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Path of the sound file to write</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if saving succeeded, false if it failed</para></simplesect>
<simplesect kind="see"><para><ref refid="classsf_1_1SoundBuffer_1a2be6a8025c97eb622a7dff6cf2594394" kindref="member">loadFromFile</ref>, <ref refid="classsf_1_1SoundBuffer_1af8cfa5599739a7edae69c5cba273d33f" kindref="member">loadFromMemory</ref>, <ref refid="classsf_1_1SoundBuffer_1a63da986e144b578135edd48e51c565e8" kindref="member">loadFromSamples</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/Audio/SoundBuffer.hpp" line="157" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsf_1_1SoundBuffer_1a4ba0c1e5b5be500af42de30b1360eb2e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="namespacesf_1a3c8e10435e2a310a7741755e66b5c94e" kindref="member">Int16</ref> *</type>
        <definition>const Int16* sf::SoundBuffer::getSamples</definition>
        <argsstring>() const </argsstring>
        <name>getSamples</name>
        <briefdescription>
<para>Get the array of audio samples stored in the buffer. </para>        </briefdescription>
        <detaileddescription>
<para>The format of the returned samples is 16 bits signed integer (<ref refid="namespacesf_1a3c8e10435e2a310a7741755e66b5c94e" kindref="member">sf::Int16</ref>). The total number of samples in this array is given by the <ref refid="classsf_1_1SoundBuffer_1a2df1f1ae89213adee1494b95bb583f9d" kindref="member">getSampleCount()</ref> function.</para><para><simplesect kind="return"><para>Read-only pointer to the array of sound samples</para></simplesect>
<simplesect kind="see"><para><ref refid="classsf_1_1SoundBuffer_1a2df1f1ae89213adee1494b95bb583f9d" kindref="member">getSampleCount</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/Audio/SoundBuffer.hpp" line="171" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsf_1_1SoundBuffer_1a2df1f1ae89213adee1494b95bb583f9d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t sf::SoundBuffer::getSampleCount</definition>
        <argsstring>() const </argsstring>
        <name>getSampleCount</name>
        <briefdescription>
<para>Get the number of samples stored in the buffer. </para>        </briefdescription>
        <detaileddescription>
<para>The array of samples can be accessed with the <ref refid="classsf_1_1SoundBuffer_1a4ba0c1e5b5be500af42de30b1360eb2e" kindref="member">getSamples()</ref> function.</para><para><simplesect kind="return"><para>Number of samples</para></simplesect>
<simplesect kind="see"><para><ref refid="classsf_1_1SoundBuffer_1a4ba0c1e5b5be500af42de30b1360eb2e" kindref="member">getSamples</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/Audio/SoundBuffer.hpp" line="184" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsf_1_1SoundBuffer_1a8cdfaea2ad1d05f81fa67442566c166e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int sf::SoundBuffer::getSampleRate</definition>
        <argsstring>() const </argsstring>
        <name>getSampleRate</name>
        <briefdescription>
<para>Get the sample rate of the sound. </para>        </briefdescription>
        <detaileddescription>
<para>The sample rate is the number of samples played per second. The higher, the better the quality (for example, 44100 samples/s is CD quality).</para><para><simplesect kind="return"><para>Sample rate (number of samples per second)</para></simplesect>
<simplesect kind="see"><para><ref refid="classsf_1_1SoundBuffer_1a0a2890747db3811fb8d969d3e3abd0d1" kindref="member">getChannelCount</ref>, <ref refid="classsf_1_1SoundBuffer_1aee681c7a0f3dff4c4d0c9f8bbdb51bb0" kindref="member">getDuration</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/Audio/SoundBuffer.hpp" line="198" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsf_1_1SoundBuffer_1a0a2890747db3811fb8d969d3e3abd0d1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int sf::SoundBuffer::getChannelCount</definition>
        <argsstring>() const </argsstring>
        <name>getChannelCount</name>
        <briefdescription>
<para>Get the number of channels used by the sound. </para>        </briefdescription>
        <detaileddescription>
<para>If the sound is mono then the number of channels will be 1, 2 for stereo, etc.</para><para><simplesect kind="return"><para>Number of channels</para></simplesect>
<simplesect kind="see"><para><ref refid="classsf_1_1SoundBuffer_1a8cdfaea2ad1d05f81fa67442566c166e" kindref="member">getSampleRate</ref>, <ref refid="classsf_1_1SoundBuffer_1aee681c7a0f3dff4c4d0c9f8bbdb51bb0" kindref="member">getDuration</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/Audio/SoundBuffer.hpp" line="211" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsf_1_1SoundBuffer_1aee681c7a0f3dff4c4d0c9f8bbdb51bb0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsf_1_1Time" kindref="compound">Time</ref></type>
        <definition>Time sf::SoundBuffer::getDuration</definition>
        <argsstring>() const </argsstring>
        <name>getDuration</name>
        <briefdescription>
<para>Get the total duration of the sound. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classsf_1_1Sound" kindref="compound">Sound</ref> duration</para></simplesect>
<simplesect kind="see"><para><ref refid="classsf_1_1SoundBuffer_1a8cdfaea2ad1d05f81fa67442566c166e" kindref="member">getSampleRate</ref>, <ref refid="classsf_1_1SoundBuffer_1a0a2890747db3811fb8d969d3e3abd0d1" kindref="member">getChannelCount</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/Audio/SoundBuffer.hpp" line="221" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsf_1_1SoundBuffer_1adcc786b60bbd95be1551368fafd274a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsf_1_1SoundBuffer" kindref="compound">SoundBuffer</ref> &amp;</type>
        <definition>SoundBuffer&amp; sf::SoundBuffer::operator=</definition>
        <argsstring>(const SoundBuffer &amp;right)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classsf_1_1SoundBuffer" kindref="compound">SoundBuffer</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
<para>Overload of assignment operator. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>right</parametername>
</parameternamelist>
<parameterdescription>
<para>Instance to assign</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to self </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/Audio/SoundBuffer.hpp" line="231" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classsf_1_1SoundBuffer_1affeb34a0970fb58678cdb5cb0591b280" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sf::SoundBuffer::initialize</definition>
        <argsstring>(priv::SoundFile &amp;file)</argsstring>
        <name>initialize</name>
        <param>
          <type>priv::SoundFile &amp;</type>
          <declname>file</declname>
        </param>
        <briefdescription>
<para>Initialize the internal state after loading a new sound. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classsf_1_1Sound" kindref="compound">Sound</ref> file providing access to the new loaded sound</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True on succesful initialization, false on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/Audio/SoundBuffer.hpp" line="245" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsf_1_1SoundBuffer_1afaa542a4b59ac4e8c4f4d163ea61c7e6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sf::SoundBuffer::update</definition>
        <argsstring>(unsigned int channelCount, unsigned int sampleRate)</argsstring>
        <name>update</name>
        <param>
          <type>unsigned int</type>
          <declname>channelCount</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>sampleRate</declname>
        </param>
        <briefdescription>
<para>Update the internal buffer with the cached audio samples. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channelCount</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of channels </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sampleRate</parametername>
</parameternamelist>
<parameterdescription>
<para>Sample rate (number of samples per second)</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True on success, false if any error happened </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/Audio/SoundBuffer.hpp" line="256" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsf_1_1SoundBuffer_1a4549653da4588eff619d7f7993ce393c" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sf::SoundBuffer::attachSound</definition>
        <argsstring>(Sound *sound) const </argsstring>
        <name>attachSound</name>
        <param>
          <type><ref refid="classsf_1_1Sound" kindref="compound">Sound</ref> *</type>
          <declname>sound</declname>
        </param>
        <briefdescription>
<para>Add a sound to the list of sounds that use this buffer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sound</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classsf_1_1Sound" kindref="compound">Sound</ref> instance to attach </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/Audio/SoundBuffer.hpp" line="264" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsf_1_1SoundBuffer_1ab7105046593d74ab3801db246fbca885" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sf::SoundBuffer::detachSound</definition>
        <argsstring>(Sound *sound) const </argsstring>
        <name>detachSound</name>
        <param>
          <type><ref refid="classsf_1_1Sound" kindref="compound">Sound</ref> *</type>
          <declname>sound</declname>
        </param>
        <briefdescription>
<para>Remove a sound from the list of sounds that use this buffer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sound</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classsf_1_1Sound" kindref="compound">Sound</ref> instance to detach </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/Audio/SoundBuffer.hpp" line="272" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Storage for audio samples defining a sound. </para>    </briefdescription>
    <detaileddescription>
<para>A sound buffer holds the data of a sound, which is an array of audio samples.</para><para>A sample is a 16 bits signed integer that defines the amplitude of the sound at a given time. The sound is then restituted by playing these samples at a high rate (for example, 44100 samples per second is the standard rate used for playing CDs). In short, audio samples are like texture pixels, and a <ref refid="classsf_1_1SoundBuffer" kindref="compound">sf::SoundBuffer</ref> is similar to a sf::Texture.</para><para>A sound buffer can be loaded from a file (see <ref refid="classsf_1_1SoundBuffer_1a2be6a8025c97eb622a7dff6cf2594394" kindref="member">loadFromFile()</ref> for the complete list of supported formats), from memory, from a custom stream (see <ref refid="classsf_1_1InputStream" kindref="compound">sf::InputStream</ref>) or directly from an array of samples. It can also be saved back to a file.</para><para><ref refid="classsf_1_1Sound" kindref="compound">Sound</ref> buffers alone are not very useful: they hold the audio data but cannot be played. To do so, you need to use the <ref refid="classsf_1_1Sound" kindref="compound">sf::Sound</ref> class, which provides functions to play/pause/stop the sound as well as changing the way it is outputted (volume, pitch, 3D position, ...). This separation allows more flexibility and better performances: indeed a <ref refid="classsf_1_1SoundBuffer" kindref="compound">sf::SoundBuffer</ref> is a heavy resource, and any operation on it is slow (often too slow for real-time applications). On the other side, a <ref refid="classsf_1_1Sound" kindref="compound">sf::Sound</ref> is a lightweight object, which can use the audio data of a sound buffer and change the way it is played without actually modifying that data. Note that it is also possible to bind several <ref refid="classsf_1_1Sound" kindref="compound">sf::Sound</ref> instances to the same <ref refid="classsf_1_1SoundBuffer" kindref="compound">sf::SoundBuffer</ref>.</para><para>It is important to note that the <ref refid="classsf_1_1Sound" kindref="compound">sf::Sound</ref> instance doesn&apos;t copy the buffer that it uses, it only keeps a reference to it. Thus, a <ref refid="classsf_1_1SoundBuffer" kindref="compound">sf::SoundBuffer</ref> must not be destructed while it is used by a <ref refid="classsf_1_1Sound" kindref="compound">sf::Sound</ref> (i.e. never write a function that uses a local <ref refid="classsf_1_1SoundBuffer" kindref="compound">sf::SoundBuffer</ref> instance for loading a sound).</para><para>Usage example: <programlisting><codeline><highlight class="normal">//<sp/>Declare<sp/>a<sp/>new<sp/>sound<sp/>buffer</highlight></codeline>
<codeline><highlight class="normal">sf::SoundBuffer<sp/>buffer;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Load<sp/>it<sp/>from<sp/>a<sp/>file</highlight></codeline>
<codeline><highlight class="normal">if<sp/>(!buffer.loadFromFile(&quot;sound.wav&quot;))</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>error...</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Create<sp/>a<sp/>sound<sp/>source<sp/>and<sp/>bind<sp/>it<sp/>to<sp/>the<sp/>buffer</highlight></codeline>
<codeline><highlight class="normal">sf::Sound<sp/>sound1;</highlight></codeline>
<codeline><highlight class="normal">sound1.setBuffer(buffer);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Play<sp/>the<sp/>sound</highlight></codeline>
<codeline><highlight class="normal">sound1.play();</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Create<sp/>another<sp/>sound<sp/>source<sp/>bound<sp/>to<sp/>the<sp/>same<sp/>buffer</highlight></codeline>
<codeline><highlight class="normal">sf::Sound<sp/>sound2;</highlight></codeline>
<codeline><highlight class="normal">sound2.setBuffer(buffer);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Play<sp/>it<sp/>with<sp/>a<sp/>higher<sp/>pitch<sp/>--<sp/>the<sp/>first<sp/>sound<sp/>remains<sp/>unchanged</highlight></codeline>
<codeline><highlight class="normal">sound2.setPitch(2);</highlight></codeline>
<codeline><highlight class="normal">sound2.play();</highlight></codeline>
</programlisting></para><para><simplesect kind="see"><para><ref refid="classsf_1_1Sound" kindref="compound">sf::Sound</ref>, <ref refid="classsf_1_1SoundBufferRecorder" kindref="compound">sf::SoundBufferRecorder</ref> </para></simplesect>
</para>    </detaileddescription>
    <collaborationgraph>
      <node id="1086">
        <label>set&lt; Sound * &gt;</label>
      </node>
      <node id="1087">
        <label>sf::Time</label>
        <link refid="classsf_1_1Time"/>
        <childnode refid="1087" relation="usage">
          <edgelabel>Zero</edgelabel>
        </childnode>
        <childnode refid="1088" relation="usage">
          <edgelabel>m_microseconds</edgelabel>
        </childnode>
      </node>
      <node id="1088">
        <label>signed long long</label>
      </node>
      <node id="1089">
        <label>vector&lt; Int16 &gt;</label>
      </node>
      <node id="1085">
        <label>sf::SoundBuffer</label>
        <link refid="classsf_1_1SoundBuffer"/>
        <childnode refid="1086" relation="usage">
          <edgelabel>m_sounds</edgelabel>
        </childnode>
        <childnode refid="1087" relation="usage">
          <edgelabel>m_duration</edgelabel>
        </childnode>
        <childnode refid="1089" relation="usage">
          <edgelabel>m_samples</edgelabel>
        </childnode>
        <childnode refid="1090" relation="usage">
          <edgelabel>m_buffer</edgelabel>
        </childnode>
      </node>
      <node id="1090">
        <label>unsigned</label>
      </node>
    </collaborationgraph>
    <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/Audio/SoundBuffer.hpp" line="53" column="1" bodyfile="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/Audio/SoundBuffer.hpp" bodystart="52" bodyend="286"/>
    <listofallmembers>
      <member refid="classsf_1_1SoundBuffer_1a4549653da4588eff619d7f7993ce393c" prot="private" virt="non-virtual"><scope>sf::SoundBuffer</scope><name>attachSound</name></member>
      <member refid="classsf_1_1SoundBuffer_1ab7105046593d74ab3801db246fbca885" prot="private" virt="non-virtual"><scope>sf::SoundBuffer</scope><name>detachSound</name></member>
      <member refid="classsf_1_1SoundBuffer_1a0a2890747db3811fb8d969d3e3abd0d1" prot="public" virt="non-virtual"><scope>sf::SoundBuffer</scope><name>getChannelCount</name></member>
      <member refid="classsf_1_1SoundBuffer_1aee681c7a0f3dff4c4d0c9f8bbdb51bb0" prot="public" virt="non-virtual"><scope>sf::SoundBuffer</scope><name>getDuration</name></member>
      <member refid="classsf_1_1SoundBuffer_1a2df1f1ae89213adee1494b95bb583f9d" prot="public" virt="non-virtual"><scope>sf::SoundBuffer</scope><name>getSampleCount</name></member>
      <member refid="classsf_1_1SoundBuffer_1a8cdfaea2ad1d05f81fa67442566c166e" prot="public" virt="non-virtual"><scope>sf::SoundBuffer</scope><name>getSampleRate</name></member>
      <member refid="classsf_1_1SoundBuffer_1a4ba0c1e5b5be500af42de30b1360eb2e" prot="public" virt="non-virtual"><scope>sf::SoundBuffer</scope><name>getSamples</name></member>
      <member refid="classsf_1_1SoundBuffer_1affeb34a0970fb58678cdb5cb0591b280" prot="private" virt="non-virtual"><scope>sf::SoundBuffer</scope><name>initialize</name></member>
      <member refid="classsf_1_1SoundBuffer_1a2be6a8025c97eb622a7dff6cf2594394" prot="public" virt="non-virtual"><scope>sf::SoundBuffer</scope><name>loadFromFile</name></member>
      <member refid="classsf_1_1SoundBuffer_1af8cfa5599739a7edae69c5cba273d33f" prot="public" virt="non-virtual"><scope>sf::SoundBuffer</scope><name>loadFromMemory</name></member>
      <member refid="classsf_1_1SoundBuffer_1a63da986e144b578135edd48e51c565e8" prot="public" virt="non-virtual"><scope>sf::SoundBuffer</scope><name>loadFromSamples</name></member>
      <member refid="classsf_1_1SoundBuffer_1ad292156b1e01f6dabd4c0c277d5e079e" prot="public" virt="non-virtual"><scope>sf::SoundBuffer</scope><name>loadFromStream</name></member>
      <member refid="classsf_1_1SoundBuffer_1a90bd207655b9b1a312f6ebb7ae783da2" prot="private" virt="non-virtual"><scope>sf::SoundBuffer</scope><name>m_buffer</name></member>
      <member refid="classsf_1_1SoundBuffer_1ad7a031590faff910c94cc442864eabd3" prot="private" virt="non-virtual"><scope>sf::SoundBuffer</scope><name>m_duration</name></member>
      <member refid="classsf_1_1SoundBuffer_1a6c954068fe46d5567f2c94eb3c79c5f3" prot="private" virt="non-virtual"><scope>sf::SoundBuffer</scope><name>m_samples</name></member>
      <member refid="classsf_1_1SoundBuffer_1aa6fc10c994c0aaca70567e8fd1ddabc3" prot="private" virt="non-virtual"><scope>sf::SoundBuffer</scope><name>m_sounds</name></member>
      <member refid="classsf_1_1SoundBuffer_1adcc786b60bbd95be1551368fafd274a7" prot="public" virt="non-virtual"><scope>sf::SoundBuffer</scope><name>operator=</name></member>
      <member refid="classsf_1_1SoundBuffer_1ab2083dc1a934c64959d9e3f162328a76" prot="public" virt="non-virtual"><scope>sf::SoundBuffer</scope><name>saveToFile</name></member>
      <member refid="classsf_1_1SoundBuffer_1a50914f77c7cf4fb97616c898c5291f4b" prot="private" virt="non-virtual"><scope>sf::SoundBuffer</scope><name>Sound</name></member>
      <member refid="classsf_1_1SoundBuffer_1a0cabfbfe19b831bf7d5c9592d92ef233" prot="public" virt="non-virtual"><scope>sf::SoundBuffer</scope><name>SoundBuffer</name></member>
      <member refid="classsf_1_1SoundBuffer_1aaf000fc741ff27015907e8588263f4a6" prot="public" virt="non-virtual"><scope>sf::SoundBuffer</scope><name>SoundBuffer</name></member>
      <member refid="classsf_1_1SoundBuffer_1a0c4edd90a4c83b07369e84f14b385196" prot="private" virt="non-virtual"><scope>sf::SoundBuffer</scope><name>SoundList</name></member>
      <member refid="classsf_1_1SoundBuffer_1afaa542a4b59ac4e8c4f4d163ea61c7e6" prot="private" virt="non-virtual"><scope>sf::SoundBuffer</scope><name>update</name></member>
      <member refid="classsf_1_1SoundBuffer_1aea240161724ffba74a0d6a9e277d3cd5" prot="public" virt="non-virtual"><scope>sf::SoundBuffer</scope><name>~SoundBuffer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
