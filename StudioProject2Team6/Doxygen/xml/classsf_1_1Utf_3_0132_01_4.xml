<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="classsf_1_1Utf_3_0132_01_4" kind="class" prot="public">
    <compoundname>sf::Utf&lt; 32 &gt;</compoundname>
    <includes refid="Utf_8hpp" local="no">Utf.hpp</includes>
    <templateparamlist>
    </templateparamlist>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classsf_1_1Utf_3_0132_01_4_1ad754ce8476f7b80563890dec12cefd46" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename In</type>
          </param>
        </templateparamlist>
        <type>In</type>
        <definition>static In sf::Utf&lt; 32 &gt;::decode</definition>
        <argsstring>(In begin, In end, Uint32 &amp;output, Uint32 replacement=0)</argsstring>
        <name>decode</name>
        <param>
          <type>In</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>In</type>
          <declname>end</declname>
        </param>
        <param>
          <type><ref refid="namespacesf_1aa746fb1ddef4410bddf198ebb27e727c" kindref="member">Uint32</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type><ref refid="namespacesf_1aa746fb1ddef4410bddf198ebb27e727c" kindref="member">Uint32</ref></type>
          <declname>replacement</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Decode a single UTF-32 character. </para>        </briefdescription>
        <detaileddescription>
<para>Decoding a character means finding its unique 32-bits code (called the codepoint) in the Unicode standard. For UTF-32, the character value is the same as the codepoint.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator pointing to the beginning of the input sequence </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator pointing to the end of the input sequence </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>Codepoint of the decoded UTF-32 character </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>replacement</parametername>
</parameternamelist>
<parameterdescription>
<para>Replacement character to use in case the UTF-8 sequence is invalid</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Iterator pointing to one past the last read element of the input sequence </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/System/Utf.hpp" line="482" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsf_1_1Utf_3_0132_01_4_1a27b9d3f3fc49a8c88d91966889fcfca1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Out</type>
          </param>
        </templateparamlist>
        <type>Out</type>
        <definition>static Out sf::Utf&lt; 32 &gt;::encode</definition>
        <argsstring>(Uint32 input, Out output, Uint32 replacement=0)</argsstring>
        <name>encode</name>
        <param>
          <type><ref refid="namespacesf_1aa746fb1ddef4410bddf198ebb27e727c" kindref="member">Uint32</ref></type>
          <declname>input</declname>
        </param>
        <param>
          <type>Out</type>
          <declname>output</declname>
        </param>
        <param>
          <type><ref refid="namespacesf_1aa746fb1ddef4410bddf198ebb27e727c" kindref="member">Uint32</ref></type>
          <declname>replacement</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Encode a single UTF-32 character. </para>        </briefdescription>
        <detaileddescription>
<para>Encoding a character means converting a unique 32-bits code (called the codepoint) in the target encoding, UTF-32. For UTF-32, the codepoint is the same as the character value.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>Codepoint to encode as UTF-32 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator pointing to the beginning of the output sequence </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>replacement</parametername>
</parameternamelist>
<parameterdescription>
<para>Replacement for characters not convertible to UTF-32 (use 0 to skip them)</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Iterator to the end of the output sequence which has been written </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/System/Utf.hpp" line="499" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsf_1_1Utf_3_0132_01_4_1a788b4ebc728dde2aaba38f3605d4867c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename In</type>
          </param>
        </templateparamlist>
        <type>In</type>
        <definition>static In sf::Utf&lt; 32 &gt;::next</definition>
        <argsstring>(In begin, In end)</argsstring>
        <name>next</name>
        <param>
          <type>In</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>In</type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>Advance to the next UTF-32 character. </para>        </briefdescription>
        <detaileddescription>
<para>This function is trivial for UTF-32, which can store every character in a single storage element.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator pointing to the beginning of the input sequence </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator pointing to the end of the input sequence</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Iterator pointing to one past the last read element of the input sequence </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/System/Utf.hpp" line="514" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsf_1_1Utf_3_0132_01_4_1a9b18c32b9e6d4b3126e9b4af45988b55" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename In</type>
          </param>
        </templateparamlist>
        <type>std::size_t</type>
        <definition>static std::size_t sf::Utf&lt; 32 &gt;::count</definition>
        <argsstring>(In begin, In end)</argsstring>
        <name>count</name>
        <param>
          <type>In</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>In</type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>Count the number of characters of a UTF-32 sequence. </para>        </briefdescription>
        <detaileddescription>
<para>This function is trivial for UTF-32, which can store every character in a single storage element.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator pointing to the beginning of the input sequence </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator pointing to the end of the input sequence</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Iterator pointing to one past the last read element of the input sequence </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/System/Utf.hpp" line="529" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsf_1_1Utf_3_0132_01_4_1a384a4169287af15876783ad477cac4e3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename In</type>
          </param>
          <param>
            <type>typename Out</type>
          </param>
        </templateparamlist>
        <type>Out</type>
        <definition>static Out sf::Utf&lt; 32 &gt;::fromAnsi</definition>
        <argsstring>(In begin, In end, Out output, const std::locale &amp;locale=std::locale())</argsstring>
        <name>fromAnsi</name>
        <param>
          <type>In</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>In</type>
          <declname>end</declname>
        </param>
        <param>
          <type>Out</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const std::locale &amp;</type>
          <declname>locale</declname>
          <defval>std::locale()</defval>
        </param>
        <briefdescription>
<para>Convert an ANSI characters range to UTF-32. </para>        </briefdescription>
        <detaileddescription>
<para>The current global locale will be used by default, unless you pass a custom one in the <emphasis>locale</emphasis> parameter.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator pointing to the beginning of the input sequence </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator pointing to the end of the input sequence </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator pointing to the beginning of the output sequence </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>locale</parametername>
</parameternamelist>
<parameterdescription>
<para>Locale to use for conversion</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Iterator to the end of the output sequence which has been written </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/System/Utf.hpp" line="546" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsf_1_1Utf_3_0132_01_4_1abdf0d41e0c8814a68326688e3b8d187f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename In</type>
          </param>
          <param>
            <type>typename Out</type>
          </param>
        </templateparamlist>
        <type>Out</type>
        <definition>static Out sf::Utf&lt; 32 &gt;::fromWide</definition>
        <argsstring>(In begin, In end, Out output)</argsstring>
        <name>fromWide</name>
        <param>
          <type>In</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>In</type>
          <declname>end</declname>
        </param>
        <param>
          <type>Out</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>Convert a wide characters range to UTF-32. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator pointing to the beginning of the input sequence </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator pointing to the end of the input sequence </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator pointing to the beginning of the output sequence</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Iterator to the end of the output sequence which has been written </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/System/Utf.hpp" line="559" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsf_1_1Utf_3_0132_01_4_1a05741b76b5a26267a72735e40ca61c55" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename In</type>
          </param>
          <param>
            <type>typename Out</type>
          </param>
        </templateparamlist>
        <type>Out</type>
        <definition>static Out sf::Utf&lt; 32 &gt;::fromLatin1</definition>
        <argsstring>(In begin, In end, Out output)</argsstring>
        <name>fromLatin1</name>
        <param>
          <type>In</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>In</type>
          <declname>end</declname>
        </param>
        <param>
          <type>Out</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>Convert a latin-1 (ISO-5589-1) characters range to UTF-32. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator pointing to the beginning of the input sequence </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator pointing to the end of the input sequence </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator pointing to the beginning of the output sequence</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Iterator to the end of the output sequence which has been written </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/System/Utf.hpp" line="572" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsf_1_1Utf_3_0132_01_4_1a768cb205f7f1d20cd900e34fb48f9316" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename In</type>
          </param>
          <param>
            <type>typename Out</type>
          </param>
        </templateparamlist>
        <type>Out</type>
        <definition>static Out sf::Utf&lt; 32 &gt;::toAnsi</definition>
        <argsstring>(In begin, In end, Out output, char replacement=0, const std::locale &amp;locale=std::locale())</argsstring>
        <name>toAnsi</name>
        <param>
          <type>In</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>In</type>
          <declname>end</declname>
        </param>
        <param>
          <type>Out</type>
          <declname>output</declname>
        </param>
        <param>
          <type>char</type>
          <declname>replacement</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const std::locale &amp;</type>
          <declname>locale</declname>
          <defval>std::locale()</defval>
        </param>
        <briefdescription>
<para>Convert an UTF-32 characters range to ANSI characters. </para>        </briefdescription>
        <detaileddescription>
<para>The current global locale will be used by default, unless you pass a custom one in the <emphasis>locale</emphasis> parameter.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator pointing to the beginning of the input sequence </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator pointing to the end of the input sequence </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator pointing to the beginning of the output sequence </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>replacement</parametername>
</parameternamelist>
<parameterdescription>
<para>Replacement for characters not convertible to ANSI (use 0 to skip them) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>locale</parametername>
</parameternamelist>
<parameterdescription>
<para>Locale to use for conversion</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Iterator to the end of the output sequence which has been written </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/System/Utf.hpp" line="590" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsf_1_1Utf_3_0132_01_4_1a0d5bf45a9732beb935592da6bed1242c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename In</type>
          </param>
          <param>
            <type>typename Out</type>
          </param>
        </templateparamlist>
        <type>Out</type>
        <definition>static Out sf::Utf&lt; 32 &gt;::toWide</definition>
        <argsstring>(In begin, In end, Out output, wchar_t replacement=0)</argsstring>
        <name>toWide</name>
        <param>
          <type>In</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>In</type>
          <declname>end</declname>
        </param>
        <param>
          <type>Out</type>
          <declname>output</declname>
        </param>
        <param>
          <type>wchar_t</type>
          <declname>replacement</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Convert an UTF-32 characters range to wide characters. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator pointing to the beginning of the input sequence </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator pointing to the end of the input sequence </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator pointing to the beginning of the output sequence </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>replacement</parametername>
</parameternamelist>
<parameterdescription>
<para>Replacement for characters not convertible to wide (use 0 to skip them)</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Iterator to the end of the output sequence which has been written </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/System/Utf.hpp" line="604" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsf_1_1Utf_3_0132_01_4_1a064ce0ad81768d0d99b6b3e2e980e3ce" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename In</type>
          </param>
          <param>
            <type>typename Out</type>
          </param>
        </templateparamlist>
        <type>Out</type>
        <definition>static Out sf::Utf&lt; 32 &gt;::toLatin1</definition>
        <argsstring>(In begin, In end, Out output, char replacement=0)</argsstring>
        <name>toLatin1</name>
        <param>
          <type>In</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>In</type>
          <declname>end</declname>
        </param>
        <param>
          <type>Out</type>
          <declname>output</declname>
        </param>
        <param>
          <type>char</type>
          <declname>replacement</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Convert an UTF-16 characters range to latin-1 (ISO-5589-1) characters. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator pointing to the beginning of the input sequence </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator pointing to the end of the input sequence </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator pointing to the beginning of the output sequence </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>replacement</parametername>
</parameternamelist>
<parameterdescription>
<para>Replacement for characters not convertible to wide (use 0 to skip them)</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Iterator to the end of the output sequence which has been written </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/System/Utf.hpp" line="618" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsf_1_1Utf_3_0132_01_4_1a193e155964b073c8ba838434f41d5e97" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename In</type>
          </param>
          <param>
            <type>typename Out</type>
          </param>
        </templateparamlist>
        <type>Out</type>
        <definition>static Out sf::Utf&lt; 32 &gt;::toUtf8</definition>
        <argsstring>(In begin, In end, Out output)</argsstring>
        <name>toUtf8</name>
        <param>
          <type>In</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>In</type>
          <declname>end</declname>
        </param>
        <param>
          <type>Out</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>Convert a UTF-32 characters range to UTF-8. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator pointing to the beginning of the input sequence </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator pointing to the end of the input sequence </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator pointing to the beginning of the output sequence</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Iterator to the end of the output sequence which has been written </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/System/Utf.hpp" line="631" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsf_1_1Utf_3_0132_01_4_1a3f97efb599ad237af06f076f3fcfa354" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename In</type>
          </param>
          <param>
            <type>typename Out</type>
          </param>
        </templateparamlist>
        <type>Out</type>
        <definition>static Out sf::Utf&lt; 32 &gt;::toUtf16</definition>
        <argsstring>(In begin, In end, Out output)</argsstring>
        <name>toUtf16</name>
        <param>
          <type>In</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>In</type>
          <declname>end</declname>
        </param>
        <param>
          <type>Out</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>Convert a UTF-32 characters range to UTF-16. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator pointing to the beginning of the input sequence </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator pointing to the end of the input sequence </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator pointing to the beginning of the output sequence</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Iterator to the end of the output sequence which has been written </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/System/Utf.hpp" line="644" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsf_1_1Utf_3_0132_01_4_1abd7c1e80791c80c4d78257440de96140" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename In</type>
          </param>
          <param>
            <type>typename Out</type>
          </param>
        </templateparamlist>
        <type>Out</type>
        <definition>static Out sf::Utf&lt; 32 &gt;::toUtf32</definition>
        <argsstring>(In begin, In end, Out output)</argsstring>
        <name>toUtf32</name>
        <param>
          <type>In</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>In</type>
          <declname>end</declname>
        </param>
        <param>
          <type>Out</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>Convert a UTF-32 characters range to UTF-32. </para>        </briefdescription>
        <detaileddescription>
<para>This functions does nothing more than a direct copy; it is defined only to provide the same interface as other specializations of the sf::Utf&lt;&gt; template, and allow generic code to be written on top of it.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator pointing to the beginning of the input sequence </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator pointing to the end of the input sequence </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator pointing to the beginning of the output sequence</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Iterator to the end of the output sequence which has been written </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/System/Utf.hpp" line="662" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsf_1_1Utf_3_0132_01_4_1a68346ea833f88267a7c739d4d96fb86f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename In</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespacesf_1aa746fb1ddef4410bddf198ebb27e727c" kindref="member">Uint32</ref></type>
        <definition>static Uint32 sf::Utf&lt; 32 &gt;::decodeAnsi</definition>
        <argsstring>(In input, const std::locale &amp;locale=std::locale())</argsstring>
        <name>decodeAnsi</name>
        <param>
          <type>In</type>
          <declname>input</declname>
        </param>
        <param>
          <type>const std::locale &amp;</type>
          <declname>locale</declname>
          <defval>std::locale()</defval>
        </param>
        <briefdescription>
<para>Decode a single ANSI character to UTF-32. </para>        </briefdescription>
        <detaileddescription>
<para>This function does not exist in other specializations of sf::Utf&lt;&gt;, it is defined for convenience (it is used by several other conversion functions).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>Input ANSI character </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>locale</parametername>
</parameternamelist>
<parameterdescription>
<para>Locale to use for conversion</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Converted character </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/System/Utf.hpp" line="678" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsf_1_1Utf_3_0132_01_4_1a043fe25f5f4dbc205e78e6f1d99840dc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename In</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespacesf_1aa746fb1ddef4410bddf198ebb27e727c" kindref="member">Uint32</ref></type>
        <definition>static Uint32 sf::Utf&lt; 32 &gt;::decodeWide</definition>
        <argsstring>(In input)</argsstring>
        <name>decodeWide</name>
        <param>
          <type>In</type>
          <declname>input</declname>
        </param>
        <briefdescription>
<para>Decode a single wide character to UTF-32. </para>        </briefdescription>
        <detaileddescription>
<para>This function does not exist in other specializations of sf::Utf&lt;&gt;, it is defined for convenience (it is used by several other conversion functions).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>Input wide character</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Converted character </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/System/Utf.hpp" line="693" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsf_1_1Utf_3_0132_01_4_1af6590226a071076ca22d818573a16ded" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Out</type>
          </param>
        </templateparamlist>
        <type>Out</type>
        <definition>static Out sf::Utf&lt; 32 &gt;::encodeAnsi</definition>
        <argsstring>(Uint32 codepoint, Out output, char replacement=0, const std::locale &amp;locale=std::locale())</argsstring>
        <name>encodeAnsi</name>
        <param>
          <type><ref refid="namespacesf_1aa746fb1ddef4410bddf198ebb27e727c" kindref="member">Uint32</ref></type>
          <declname>codepoint</declname>
        </param>
        <param>
          <type>Out</type>
          <declname>output</declname>
        </param>
        <param>
          <type>char</type>
          <declname>replacement</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const std::locale &amp;</type>
          <declname>locale</declname>
          <defval>std::locale()</defval>
        </param>
        <briefdescription>
<para>Encode a single UTF-32 character to ANSI. </para>        </briefdescription>
        <detaileddescription>
<para>This function does not exist in other specializations of sf::Utf&lt;&gt;, it is defined for convenience (it is used by several other conversion functions).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>codepoint</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator pointing to the beginning of the input sequence </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator pointing to the beginning of the output sequence </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>replacement</parametername>
</parameternamelist>
<parameterdescription>
<para>Replacement if the input character is not convertible to ANSI (use 0 to skip it) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>locale</parametername>
</parameternamelist>
<parameterdescription>
<para>Locale to use for conversion</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Iterator to the end of the output sequence which has been written </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/System/Utf.hpp" line="711" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsf_1_1Utf_3_0132_01_4_1a52e511e74ddc5df1bbf18f910193bc47" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Out</type>
          </param>
        </templateparamlist>
        <type>Out</type>
        <definition>static Out sf::Utf&lt; 32 &gt;::encodeWide</definition>
        <argsstring>(Uint32 codepoint, Out output, wchar_t replacement=0)</argsstring>
        <name>encodeWide</name>
        <param>
          <type><ref refid="namespacesf_1aa746fb1ddef4410bddf198ebb27e727c" kindref="member">Uint32</ref></type>
          <declname>codepoint</declname>
        </param>
        <param>
          <type>Out</type>
          <declname>output</declname>
        </param>
        <param>
          <type>wchar_t</type>
          <declname>replacement</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Encode a single UTF-32 character to wide. </para>        </briefdescription>
        <detaileddescription>
<para>This function does not exist in other specializations of sf::Utf&lt;&gt;, it is defined for convenience (it is used by several other conversion functions).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>codepoint</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator pointing to the beginning of the input sequence </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator pointing to the beginning of the output sequence </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>replacement</parametername>
</parameternamelist>
<parameterdescription>
<para>Replacement if the input character is not convertible to wide (use 0 to skip it)</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Iterator to the end of the output sequence which has been written </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/System/Utf.hpp" line="728" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Specialization of the <ref refid="singletonsf_1_1Utf" kindref="compound">Utf</ref> template for UTF-32. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/System/Utf.hpp" line="463" column="1" bodyfile="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/System/Utf.hpp" bodystart="462" bodyend="729"/>
    <listofallmembers>
      <member refid="classsf_1_1Utf_3_0132_01_4_1a9b18c32b9e6d4b3126e9b4af45988b55" prot="public" virt="non-virtual"><scope>sf::Utf&lt; 32 &gt;</scope><name>count</name></member>
      <member refid="classsf_1_1Utf_3_0132_01_4_1ad754ce8476f7b80563890dec12cefd46" prot="public" virt="non-virtual"><scope>sf::Utf&lt; 32 &gt;</scope><name>decode</name></member>
      <member refid="classsf_1_1Utf_3_0132_01_4_1a68346ea833f88267a7c739d4d96fb86f" prot="public" virt="non-virtual"><scope>sf::Utf&lt; 32 &gt;</scope><name>decodeAnsi</name></member>
      <member refid="classsf_1_1Utf_3_0132_01_4_1a043fe25f5f4dbc205e78e6f1d99840dc" prot="public" virt="non-virtual"><scope>sf::Utf&lt; 32 &gt;</scope><name>decodeWide</name></member>
      <member refid="classsf_1_1Utf_3_0132_01_4_1a27b9d3f3fc49a8c88d91966889fcfca1" prot="public" virt="non-virtual"><scope>sf::Utf&lt; 32 &gt;</scope><name>encode</name></member>
      <member refid="classsf_1_1Utf_3_0132_01_4_1af6590226a071076ca22d818573a16ded" prot="public" virt="non-virtual"><scope>sf::Utf&lt; 32 &gt;</scope><name>encodeAnsi</name></member>
      <member refid="classsf_1_1Utf_3_0132_01_4_1a52e511e74ddc5df1bbf18f910193bc47" prot="public" virt="non-virtual"><scope>sf::Utf&lt; 32 &gt;</scope><name>encodeWide</name></member>
      <member refid="classsf_1_1Utf_3_0132_01_4_1a384a4169287af15876783ad477cac4e3" prot="public" virt="non-virtual"><scope>sf::Utf&lt; 32 &gt;</scope><name>fromAnsi</name></member>
      <member refid="classsf_1_1Utf_3_0132_01_4_1a05741b76b5a26267a72735e40ca61c55" prot="public" virt="non-virtual"><scope>sf::Utf&lt; 32 &gt;</scope><name>fromLatin1</name></member>
      <member refid="classsf_1_1Utf_3_0132_01_4_1abdf0d41e0c8814a68326688e3b8d187f" prot="public" virt="non-virtual"><scope>sf::Utf&lt; 32 &gt;</scope><name>fromWide</name></member>
      <member refid="classsf_1_1Utf_3_0132_01_4_1a788b4ebc728dde2aaba38f3605d4867c" prot="public" virt="non-virtual"><scope>sf::Utf&lt; 32 &gt;</scope><name>next</name></member>
      <member refid="classsf_1_1Utf_3_0132_01_4_1a768cb205f7f1d20cd900e34fb48f9316" prot="public" virt="non-virtual"><scope>sf::Utf&lt; 32 &gt;</scope><name>toAnsi</name></member>
      <member refid="classsf_1_1Utf_3_0132_01_4_1a064ce0ad81768d0d99b6b3e2e980e3ce" prot="public" virt="non-virtual"><scope>sf::Utf&lt; 32 &gt;</scope><name>toLatin1</name></member>
      <member refid="classsf_1_1Utf_3_0132_01_4_1a3f97efb599ad237af06f076f3fcfa354" prot="public" virt="non-virtual"><scope>sf::Utf&lt; 32 &gt;</scope><name>toUtf16</name></member>
      <member refid="classsf_1_1Utf_3_0132_01_4_1abd7c1e80791c80c4d78257440de96140" prot="public" virt="non-virtual"><scope>sf::Utf&lt; 32 &gt;</scope><name>toUtf32</name></member>
      <member refid="classsf_1_1Utf_3_0132_01_4_1a193e155964b073c8ba838434f41d5e97" prot="public" virt="non-virtual"><scope>sf::Utf&lt; 32 &gt;</scope><name>toUtf8</name></member>
      <member refid="classsf_1_1Utf_3_0132_01_4_1a0d5bf45a9732beb935592da6bed1242c" prot="public" virt="non-virtual"><scope>sf::Utf&lt; 32 &gt;</scope><name>toWide</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
