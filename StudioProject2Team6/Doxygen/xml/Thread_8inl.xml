<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="Thread_8inl" kind="file">
    <compoundname>Thread.inl</compoundname>
    <includedby refid="Thread_8hpp" local="no">SFML/include/SFML/System/Thread.hpp</includedby>
    <invincdepgraph>
      <node id="4003">
        <label>MyGraphics/Source/SceneSP.cpp</label>
        <link refid="SceneSP_8cpp"/>
      </node>
      <node id="3999">
        <label>SFML/include/SFML/Audio.hpp</label>
        <link refid="Audio_8hpp"/>
        <childnode refid="4000" relation="include">
        </childnode>
      </node>
      <node id="3996">
        <label>SFML/include/SFML/System/Thread.hpp</label>
        <link refid="Thread_8hpp"/>
        <childnode refid="3997" relation="include">
        </childnode>
        <childnode refid="4004" relation="include">
        </childnode>
        <childnode refid="4006" relation="include">
        </childnode>
      </node>
      <node id="4001">
        <label>MyGraphics/Source/Application.cpp</label>
        <link refid="Application_8cpp"/>
      </node>
      <node id="4004">
        <label>SFML/include/SFML/Audio/SoundStream.hpp</label>
        <link refid="SoundStream_8hpp"/>
        <childnode refid="4005" relation="include">
        </childnode>
        <childnode refid="3999" relation="include">
        </childnode>
      </node>
      <node id="3997">
        <label>SFML/include/SFML/Audio/SoundRecorder.hpp</label>
        <link refid="SoundRecorder_8hpp"/>
        <childnode refid="3998" relation="include">
        </childnode>
        <childnode refid="3999" relation="include">
        </childnode>
      </node>
      <node id="4000">
        <label>MyGraphics/Source/SceneSP.h</label>
        <link refid="SceneSP_8h"/>
        <childnode refid="4001" relation="include">
        </childnode>
        <childnode refid="4002" relation="include">
        </childnode>
        <childnode refid="4003" relation="include">
        </childnode>
      </node>
      <node id="3995">
        <label>SFML/include/SFML/System/Thread.inl</label>
        <link refid="Thread.inl"/>
        <childnode refid="3996" relation="include">
        </childnode>
      </node>
      <node id="4006">
        <label>SFML/include/SFML/System.hpp</label>
        <link refid="System_8hpp"/>
        <childnode refid="3999" relation="include">
        </childnode>
      </node>
      <node id="3998">
        <label>SFML/include/SFML/Audio/SoundBufferRecorder.hpp</label>
        <link refid="SoundBufferRecorder_8hpp"/>
        <childnode refid="3999" relation="include">
        </childnode>
      </node>
      <node id="4002">
        <label>MyGraphics/Source/Camera3.cpp</label>
        <link refid="Camera3_8cpp"/>
      </node>
      <node id="4005">
        <label>SFML/include/SFML/Audio/Music.hpp</label>
        <link refid="Music_8hpp"/>
        <childnode refid="3999" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structpriv_1_1ThreadFunc" prot="public">priv::ThreadFunc</innerclass>
    <innerclass refid="structpriv_1_1ThreadFunctor" prot="public">priv::ThreadFunctor</innerclass>
    <innerclass refid="structpriv_1_1ThreadFunctorWithArg" prot="public">priv::ThreadFunctorWithArg</innerclass>
    <innerclass refid="structpriv_1_1ThreadMemberFunc" prot="public">priv::ThreadMemberFunc</innerclass>
    <innernamespace refid="namespacepriv">priv</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SFML<sp/>-<sp/>Simple<sp/>and<sp/>Fast<sp/>Multimedia<sp/>Library</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2007-2014<sp/>Laurent<sp/>Gomila<sp/>(laurent.gom@gmail.com)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>software<sp/>is<sp/>provided<sp/>&apos;as-is&apos;,<sp/>without<sp/>any<sp/>express<sp/>or<sp/>implied<sp/>warranty.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>no<sp/>event<sp/>will<sp/>the<sp/>authors<sp/>be<sp/>held<sp/>liable<sp/>for<sp/>any<sp/>damages<sp/>arising<sp/>from<sp/>the<sp/>use<sp/>of<sp/>this<sp/>software.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Permission<sp/>is<sp/>granted<sp/>to<sp/>anyone<sp/>to<sp/>use<sp/>this<sp/>software<sp/>for<sp/>any<sp/>purpose,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>including<sp/>commercial<sp/>applications,<sp/>and<sp/>to<sp/>alter<sp/>it<sp/>and<sp/>redistribute<sp/>it<sp/>freely,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>restrictions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>1.<sp/>The<sp/>origin<sp/>of<sp/>this<sp/>software<sp/>must<sp/>not<sp/>be<sp/>misrepresented;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>you<sp/>must<sp/>not<sp/>claim<sp/>that<sp/>you<sp/>wrote<sp/>the<sp/>original<sp/>software.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>If<sp/>you<sp/>use<sp/>this<sp/>software<sp/>in<sp/>a<sp/>product,<sp/>an<sp/>acknowledgment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>in<sp/>the<sp/>product<sp/>documentation<sp/>would<sp/>be<sp/>appreciated<sp/>but<sp/>is<sp/>not<sp/>required.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>2.<sp/>Altered<sp/>source<sp/>versions<sp/>must<sp/>be<sp/>plainly<sp/>marked<sp/>as<sp/>such,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>and<sp/>must<sp/>not<sp/>be<sp/>misrepresented<sp/>as<sp/>being<sp/>the<sp/>original<sp/>software.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>3.<sp/>This<sp/>notice<sp/>may<sp/>not<sp/>be<sp/>removed<sp/>or<sp/>altered<sp/>from<sp/>any<sp/>source<sp/>distribution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="24"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="namespacepriv" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacepriv" kindref="compound">priv</ref></highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Base<sp/>class<sp/>for<sp/>abstract<sp/>thread<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="structpriv_1_1ThreadFunc" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpriv_1_1ThreadFunc" kindref="compound">ThreadFunc</ref></highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30" refid="structpriv_1_1ThreadFunc_1a085d7741b00ad5c8610cc26739d423cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="structpriv_1_1ThreadFunc_1a085d7741b00ad5c8610cc26739d423cb" kindref="member">~ThreadFunc</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structpriv_1_1ThreadFunc_1ab5465e714ca4aa92a09bf5e24410a5c3" kindref="member">run</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="32"><highlight class="normal">};</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Specialization<sp/>using<sp/>a<sp/>functor<sp/>(including<sp/>free<sp/>functions)<sp/>with<sp/>no<sp/>argument</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="36" refid="structpriv_1_1ThreadFunctor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpriv_1_1ThreadFunctor" kindref="compound">ThreadFunctor</ref><sp/>:<sp/><ref refid="structpriv_1_1ThreadFunc" kindref="compound">ThreadFunc</ref></highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38" refid="structpriv_1_1ThreadFunctor_1a2df57df5cd6f7396b033512bb0e01848" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpriv_1_1ThreadFunctor_1a2df57df5cd6f7396b033512bb0e01848" kindref="member">ThreadFunctor</ref>(T<sp/>functor)<sp/>:<sp/><ref refid="structpriv_1_1ThreadFunctor_1a73254bbde4d3452de1aeda531ca632b2" kindref="member">m_functor</ref>(functor)<sp/>{}</highlight></codeline>
<codeline lineno="39" refid="structpriv_1_1ThreadFunctor_1a8bb44b4b46d08d844d070ae3fdb251d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structpriv_1_1ThreadFunctor_1a8bb44b4b46d08d844d070ae3fdb251d7" kindref="member">run</ref>()<sp/>{<ref refid="structpriv_1_1ThreadFunctor_1a73254bbde4d3452de1aeda531ca632b2" kindref="member">m_functor</ref>();}</highlight></codeline>
<codeline lineno="40" refid="structpriv_1_1ThreadFunctor_1a73254bbde4d3452de1aeda531ca632b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="structpriv_1_1ThreadFunctor_1a73254bbde4d3452de1aeda531ca632b2" kindref="member">m_functor</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal">};</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Specialization<sp/>using<sp/>a<sp/>functor<sp/>(including<sp/>free<sp/>functions)<sp/>with<sp/>one<sp/>argument</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A&gt;</highlight></codeline>
<codeline lineno="45" refid="structpriv_1_1ThreadFunctorWithArg" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpriv_1_1ThreadFunctorWithArg" kindref="compound">ThreadFunctorWithArg</ref><sp/>:<sp/><ref refid="structpriv_1_1ThreadFunc" kindref="compound">ThreadFunc</ref></highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47" refid="structpriv_1_1ThreadFunctorWithArg_1ae3745753b77880cdfda6f10d72748efa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpriv_1_1ThreadFunctorWithArg_1ae3745753b77880cdfda6f10d72748efa" kindref="member">ThreadFunctorWithArg</ref>(F<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/>A<sp/>arg)<sp/>:<sp/><ref refid="structpriv_1_1ThreadFunctorWithArg_1ab12992af3112f15df4b6f0dbce3137b9" kindref="member">m_function</ref>(function),<sp/><ref refid="structpriv_1_1ThreadFunctorWithArg_1ac598f7701f976320bc3964733b9ae9ae" kindref="member">m_arg</ref>(arg)<sp/>{}</highlight></codeline>
<codeline lineno="48" refid="structpriv_1_1ThreadFunctorWithArg_1a0f8bb6ba36819e80016528bab8b0bd4f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structpriv_1_1ThreadFunctorWithArg_1a0f8bb6ba36819e80016528bab8b0bd4f" kindref="member">run</ref>()<sp/>{<ref refid="structpriv_1_1ThreadFunctorWithArg_1ab12992af3112f15df4b6f0dbce3137b9" kindref="member">m_function</ref>(<ref refid="structpriv_1_1ThreadFunctorWithArg_1ac598f7701f976320bc3964733b9ae9ae" kindref="member">m_arg</ref>);}</highlight></codeline>
<codeline lineno="49" refid="structpriv_1_1ThreadFunctorWithArg_1ab12992af3112f15df4b6f0dbce3137b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>F<sp/><ref refid="structpriv_1_1ThreadFunctorWithArg_1ab12992af3112f15df4b6f0dbce3137b9" kindref="member">m_function</ref>;</highlight></codeline>
<codeline lineno="50" refid="structpriv_1_1ThreadFunctorWithArg_1ac598f7701f976320bc3964733b9ae9ae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>A<sp/><ref refid="structpriv_1_1ThreadFunctorWithArg_1ac598f7701f976320bc3964733b9ae9ae" kindref="member">m_arg</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">};</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Specialization<sp/>using<sp/>a<sp/>member<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C&gt;</highlight></codeline>
<codeline lineno="55" refid="structpriv_1_1ThreadMemberFunc" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpriv_1_1ThreadMemberFunc" kindref="compound">ThreadMemberFunc</ref><sp/>:<sp/><ref refid="structpriv_1_1ThreadFunc" kindref="compound">ThreadFunc</ref></highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57" refid="structpriv_1_1ThreadMemberFunc_1ae44619c4cf6d886da6f32a1de37d652e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpriv_1_1ThreadMemberFunc_1ae44619c4cf6d886da6f32a1de37d652e" kindref="member">ThreadMemberFunc</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(C::*</highlight><highlight class="keyword">function</highlight><highlight class="normal">)(),<sp/>C*<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)<sp/>:<sp/><ref refid="structpriv_1_1ThreadMemberFunc_1a237f80d81258c6553fd18e86880ab6c4" kindref="member">m_function</ref>(function),<sp/><ref refid="structpriv_1_1ThreadMemberFunc_1a849dd2e31c95e699fb316065d9d75116" kindref="member">m_object</ref>(object)<sp/>{}</highlight></codeline>
<codeline lineno="58" refid="structpriv_1_1ThreadMemberFunc_1abbd440e93edf2747cf9cdde579bc5de0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structpriv_1_1ThreadMemberFunc_1abbd440e93edf2747cf9cdde579bc5de0" kindref="member">run</ref>()<sp/>{(<ref refid="structpriv_1_1ThreadMemberFunc_1a849dd2e31c95e699fb316065d9d75116" kindref="member">m_object</ref>-&gt;*<ref refid="structpriv_1_1ThreadMemberFunc_1a237f80d81258c6553fd18e86880ab6c4" kindref="member">m_function</ref>)();}</highlight></codeline>
<codeline lineno="59" refid="structpriv_1_1ThreadMemberFunc_1a237f80d81258c6553fd18e86880ab6c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>void(C::*<ref refid="structpriv_1_1ThreadMemberFunc_1a237f80d81258c6553fd18e86880ab6c4" kindref="member">m_function</ref>)();</highlight></codeline>
<codeline lineno="60" refid="structpriv_1_1ThreadMemberFunc_1a849dd2e31c95e699fb316065d9d75116" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>C*<sp/><ref refid="structpriv_1_1ThreadMemberFunc_1a849dd2e31c95e699fb316065d9d75116" kindref="member">m_object</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal">};</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>priv</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="68" refid="classsf_1_1Thread_1a00b88f036de66eb63765f4c12ceb6870" refkind="member"><highlight class="normal">Thread::Thread(F<sp/>functor)<sp/>:</highlight></codeline>
<codeline lineno="69"><highlight class="normal">m_impl<sp/><sp/><sp/><sp/><sp/><sp/>(NULL),</highlight></codeline>
<codeline lineno="70"><highlight class="normal">m_entryPoint(new<sp/><ref refid="namespacepriv" kindref="compound">priv</ref>::ThreadFunctor&lt;F&gt;(functor))</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A&gt;</highlight></codeline>
<codeline lineno="77" refid="classsf_1_1Thread_1a719b2cc067d92d52c35064a49d850a53" refkind="member"><highlight class="normal"><ref refid="classsf_1_1Thread_1a4cc65399bbb111cf8132537783b8e96c" kindref="member">Thread::Thread</ref>(F<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/>A<sp/>argument)<sp/>:</highlight></codeline>
<codeline lineno="78"><highlight class="normal">m_impl<sp/><sp/><sp/><sp/><sp/><sp/>(NULL),</highlight></codeline>
<codeline lineno="79"><highlight class="normal">m_entryPoint(new<sp/><ref refid="namespacepriv" kindref="compound">priv</ref>::ThreadFunctorWithArg&lt;F,<sp/>A&gt;(function,<sp/>argument))</highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C&gt;</highlight></codeline>
<codeline lineno="86" refid="classsf_1_1Thread_1aa9f473c8cbb078900c62b1fd14a83a34" refkind="member"><highlight class="normal"><ref refid="classsf_1_1Thread_1a4cc65399bbb111cf8132537783b8e96c" kindref="member">Thread::Thread</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(C::*</highlight><highlight class="keyword">function</highlight><highlight class="normal">)(),<sp/>C*<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)<sp/>:</highlight></codeline>
<codeline lineno="87"><highlight class="normal">m_impl<sp/><sp/><sp/><sp/><sp/><sp/>(NULL),</highlight></codeline>
<codeline lineno="88"><highlight class="normal">m_entryPoint(new<sp/><ref refid="namespacepriv" kindref="compound">priv</ref>::ThreadMemberFunc&lt;C&gt;(function,<sp/>object))</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/john/Desktop/StudioProject2Team6/StudioProject2Team6/SFML/include/SFML/System/Thread.inl"/>
  </compounddef>
</doxygen>
